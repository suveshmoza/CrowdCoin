{"ast":null,"code":"var _jsxFileName = \"/home/suveshmoza/Stuff/Projects/kickstart/pages/campaigns/requests/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Button, Table } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\nimport Layout from \"../../../components/Layout\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport RequestRow from \"../../../components/RequestRow\";\n\nconst RequestIndex = ({\n  address,\n  requests,\n  requestCount,\n  approversCount\n}) => {\n  const {\n    Header,\n    Row,\n    HeaderCell,\n    Body\n  } = Table;\n  console.log(requestCount);\n\n  const renderRow = () => {\n    return requests.map((request, index) => {\n      return __jsx(RequestRow, {\n        id: index,\n        request: request,\n        approversCount: approversCount,\n        address: address,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 5\n        }\n      });\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, \"Request List\"), __jsx(Link, {\n    route: `/campaigns/${address}/requests/new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    primary: true,\n    floated: \"right\",\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }\n  }, \"Add Requests\"))), __jsx(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, __jsx(HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"ID\"), __jsx(HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Description\"), __jsx(HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Amount\"), __jsx(HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Recipient\"), __jsx(HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Approval Count\"), __jsx(HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Approve\"), __jsx(HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Finalize\"))), __jsx(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, renderRow())), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, \"Found \", requestCount, \" requests\"));\n};\n\nRequestIndex.getInitialProps = async props => {\n  const {\n    address\n  } = props.query;\n  const campaign = Campaign(address);\n  const requestCount = await campaign.methods.getRequestsCount().call();\n  const approversCount = await campaign.methods.approversCount().call();\n  const requests = await Promise.all(Array(requestCount).fill().map((element, index) => {\n    return campaign.methods.requests(index).call();\n  }));\n  return {\n    address,\n    requests,\n    requestCount,\n    approversCount\n  };\n};\n\nexport default RequestIndex;","map":{"version":3,"sources":["/home/suveshmoza/Stuff/Projects/kickstart/pages/campaigns/requests/index.js"],"names":["React","Button","Table","Link","Layout","Campaign","RequestRow","RequestIndex","address","requests","requestCount","approversCount","Header","Row","HeaderCell","Body","console","log","renderRow","map","request","index","marginBottom","getInitialProps","props","query","campaign","methods","getRequestsCount","call","Promise","all","Array","fill","element"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Table } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\nimport Layout from \"../../../components/Layout\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport RequestRow from \"../../../components/RequestRow\";\n\nconst RequestIndex = ({ address, requests, requestCount, approversCount }) => {\n\tconst { Header, Row, HeaderCell, Body } = Table;\n\tconsole.log(requestCount);\n\tconst renderRow = () => {\n\t\treturn requests.map((request, index) => {\n\t\t\treturn (\n\t\t\t\t<RequestRow\n\t\t\t\t\tid={index}\n\t\t\t\t\trequest={request}\n\t\t\t\t\tapproversCount={approversCount}\n\t\t\t\t\taddress={address}\n\t\t\t\t\tkey={index}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<h3>Request List</h3>\n\t\t\t<Link route={`/campaigns/${address}/requests/new`}>\n\t\t\t\t<a>\n\t\t\t\t\t<Button primary floated=\"right\" style={{ marginBottom: 10 }}>\n\t\t\t\t\t\tAdd Requests\n\t\t\t\t\t</Button>\n\t\t\t\t</a>\n\t\t\t</Link>\n\t\t\t<Table>\n\t\t\t\t<Header>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<HeaderCell>ID</HeaderCell>\n\t\t\t\t\t\t<HeaderCell>Description</HeaderCell>\n\t\t\t\t\t\t<HeaderCell>Amount</HeaderCell>\n\t\t\t\t\t\t<HeaderCell>Recipient</HeaderCell>\n\t\t\t\t\t\t<HeaderCell>Approval Count</HeaderCell>\n\t\t\t\t\t\t<HeaderCell>Approve</HeaderCell>\n\t\t\t\t\t\t<HeaderCell>Finalize</HeaderCell>\n\t\t\t\t\t</Row>\n\t\t\t\t</Header>\n\t\t\t\t<Body>{renderRow()}</Body>\n\t\t\t</Table>\n\t\t\t<div>Found {requestCount} requests</div>\n\t\t</Layout>\n\t);\n};\n\nRequestIndex.getInitialProps = async (props) => {\n\tconst { address } = props.query;\n\tconst campaign = Campaign(address);\n\tconst requestCount = await campaign.methods.getRequestsCount().call();\n\tconst approversCount = await campaign.methods.approversCount().call();\n\tconst requests = await Promise.all(\n\t\tArray(requestCount)\n\t\t\t.fill()\n\t\t\t.map((element, index) => {\n\t\t\t\treturn campaign.methods.requests(index).call();\n\t\t\t})\n\t);\n\treturn { address, requests, requestCount, approversCount };\n};\n\nexport default RequestIndex;\n"]},"metadata":{},"sourceType":"module"}