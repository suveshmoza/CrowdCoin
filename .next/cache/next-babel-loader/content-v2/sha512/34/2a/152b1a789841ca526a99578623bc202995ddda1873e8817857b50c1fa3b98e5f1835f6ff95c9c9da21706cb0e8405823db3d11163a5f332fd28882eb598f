{"ast":null,"code":"import _regeneratorRuntime from \"/home/suveshmoza/Stuff/Projects/kickstart/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/suveshmoza/Stuff/Projects/kickstart/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/suveshmoza/Stuff/Projects/kickstart/components/RequestRow.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nvar RequestRow = function RequestRow(_ref) {\n  var address = _ref.address,\n      id = _ref.id,\n      request = _ref.request,\n      approversCount = _ref.approversCount;\n  var Row = Table.Row,\n      Cell = Table.Cell;\n\n  var onApprove = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var campaign, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              campaign = Campaign(address);\n              _context.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context.sent;\n              _context.next = 6;\n              return campaign.methods.approveRequest(id).send({\n                from: accounts[0]\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onApprove() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onFinalize = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var campaign, accounts;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              campaign = Campaign(address);\n              _context2.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context2.sent;\n              _context2.next = 6;\n              return campaign.methods.finalizeRequest(id).send({\n                from: accounts[0]\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onFinalize() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var readyToFinalize = request.approvalCount > approversCount / 2;\n  return __jsx(Row, {\n    disabled: request.complete,\n    positive: readyToFinalize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, __jsx(Cell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, id), __jsx(Cell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, request.description), __jsx(Cell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, web3.utils.fromWei(request.value, \"ether\")), __jsx(Cell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, request.recipient), __jsx(Cell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, request.approvalCount, \"/\", approversCount), __jsx(Cell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, request.complete ? null : __jsx(Button, {\n    color: \"green\",\n    basic: true,\n    onClick: onApprove,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, \"Approve\")), __jsx(Cell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, request.complete ? null : __jsx(Button, {\n    color: \"teal\",\n    basic: true,\n    onClick: onFinalize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  }, \"Finalize\")));\n};\n\n_c = RequestRow;\nexport default RequestRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestRow\");","map":{"version":3,"sources":["/home/suveshmoza/Stuff/Projects/kickstart/components/RequestRow.js"],"names":["React","Table","Button","web3","Campaign","RequestRow","address","id","request","approversCount","Row","Cell","onApprove","campaign","eth","getAccounts","accounts","methods","approveRequest","send","from","onFinalize","finalizeRequest","readyToFinalize","approvalCount","complete","description","utils","fromWei","value","recipient"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\nconst RequestRow = ({ address, id, request, approversCount }) => {\n\tconst { Row, Cell } = Table;\n\n\tconst onApprove = async () => {\n\t\tconst campaign = Campaign(address);\n\t\tconst accounts = await web3.eth.getAccounts();\n\t\tawait campaign.methods.approveRequest(id).send({\n\t\t\tfrom: accounts[0],\n\t\t});\n\t};\n\n\tconst onFinalize = async () => {\n\t\tconst campaign = Campaign(address);\n\t\tconst accounts = await web3.eth.getAccounts();\n\t\tawait campaign.methods.finalizeRequest(id).send({\n\t\t\tfrom: accounts[0],\n\t\t});\n\t};\n\n\tconst readyToFinalize = request.approvalCount > approversCount / 2;\n\n\treturn (\n\t\t<Row disabled={request.complete} positive={readyToFinalize}>\n\t\t\t<Cell>{id}</Cell>\n\t\t\t<Cell>{request.description}</Cell>\n\t\t\t<Cell>{web3.utils.fromWei(request.value, \"ether\")}</Cell>\n\t\t\t<Cell>{request.recipient}</Cell>\n\t\t\t<Cell>\n\t\t\t\t{request.approvalCount}/{approversCount}\n\t\t\t</Cell>\n\t\t\t<Cell>\n\t\t\t\t{request.complete ? null : (\n\t\t\t\t\t<Button color=\"green\" basic onClick={onApprove}>\n\t\t\t\t\t\tApprove\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</Cell>\n\t\t\t<Cell>\n\t\t\t\t{request.complete ? null : (\n\t\t\t\t\t<Button color=\"teal\" basic onClick={onFinalize}>\n\t\t\t\t\t\tFinalize\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</Cell>\n\t\t</Row>\n\t);\n};\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}